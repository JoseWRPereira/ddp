I"St<h1 id="display-lcd">Display LCD</h1>

<p>O LCD permite um transferência de dados por um barramento de 8 ou 4 vias, economizando assim quatro bits que podem ser utilizados para outros fins.</p>

<h2 id="objetivo">Objetivo</h2>

<p>Adaptar a biblioteca dispLCD8vias para trabalhar com um barramento de 4 vias de dados.</p>

<!--more-->

<h2 id="1-circuito-hardware">1. Circuito (<em>Hardware</em>)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Figura 1.1: Display LCD HD44780</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://github.com/JoseWRPereira/ddp/blob/master//_posts/tUcPIC/imgP0122/dispLCD4vias.gif?raw=true" alt="circuito" /></td>
    </tr>
  </tbody>
</table>

<h2 id="2-programa-firmware">2. Programa (<em>Firmware</em>)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Figura 2: Árvore de diretório do projeto</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://github.com/JoseWRPereira/ddp/blob/master//_posts/tUcPIC/imgP0122/projectTree.jpg?raw=true" alt="circuito" /></td>
    </tr>
  </tbody>
</table>

<h2 id="estrutura-do-programa">Estrutura do programa</h2>

<h3 id="programa-principal">Programa principal</h3>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
 * File:   main.c
 * Author: josewrpereira
 *
 * Created on 15 de Agosto de 2020, 16:03:21
 *
 * -------------------------------------------------
 *          MAPA DE ENTRADAS E SAIDAS
 * -------------------------------------------------
 *  Pinos   |nº     | Conexão
 * ---------|-------|-------------------------------
 *  RD2     |21     | LCD_RS
 *  RD3     |22     | LCD_EN
 *  RD4     |27     | LCD_D4
 *  RD5     |28     | LCD_D5
 *  RD6     |29     | LCD_D6
 *  RD7     |30     | LCD_D7
 * -------------------------------------------------
 * -------------------------------------------------
 */</span>

<span class="cp">#include &lt;xc.h&gt;
#include "config.h"
#include "delay.h"
#include "dispLCD4vias.h"
</span>
<span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">tela</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">n_1</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">n_2</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">dispLCD_init</span><span class="p">();</span>

    <span class="k">while</span><span class="p">(</span> <span class="mi">1</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="k">switch</span><span class="p">(</span> <span class="n">tela</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="k">case</span> <span class="mi">0</span><span class="p">:</span> <span class="n">dispLCD</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">" Display LCD 4b "</span><span class="p">);</span> 
                    <span class="n">tela</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
                    <span class="k">break</span><span class="p">;</span>
                    
            <span class="k">case</span> <span class="mi">1</span><span class="p">:</span> <span class="n">dispLCD</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">"    HD44780     "</span><span class="p">);</span> 
                    <span class="n">tela</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">2000</span><span class="p">);</span>
                    <span class="k">break</span><span class="p">;</span>
                    
            <span class="k">case</span> <span class="mi">2</span><span class="p">:</span> <span class="n">dispLCD_clr</span><span class="p">();</span>
                    <span class="n">tela</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
                    <span class="k">break</span><span class="p">;</span>
                    
            <span class="k">case</span> <span class="mi">3</span><span class="p">:</span> <span class="n">dispLCD</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">" dispLCD_init() "</span><span class="p">);</span> 
                    <span class="n">dispLCD</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">"  inicializa    "</span><span class="p">);</span> 
                    <span class="n">tela</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
                    <span class="k">break</span><span class="p">;</span>
                    
            <span class="k">case</span> <span class="mi">4</span><span class="p">:</span> <span class="n">dispLCD</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">"dispLCD(l,c,str)"</span><span class="p">);</span> 
                    <span class="n">dispLCD</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">"l: linha        "</span><span class="p">);</span> 
                    <span class="n">tela</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">2000</span><span class="p">);</span>
                    <span class="k">break</span><span class="p">;</span>
                    
            <span class="k">case</span> <span class="mi">5</span><span class="p">:</span> <span class="n">dispLCD</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">"c: coluna       "</span><span class="p">);</span> 
                    <span class="n">tela</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
                    <span class="k">break</span><span class="p">;</span>
                    
            <span class="k">case</span> <span class="mi">6</span><span class="p">:</span> <span class="n">dispLCD</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">"str: string     "</span><span class="p">);</span> 
                    <span class="n">tela</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">1500</span><span class="p">);</span>
                    <span class="k">break</span><span class="p">;</span>
                    
            <span class="k">case</span> <span class="mi">10</span><span class="p">:</span>
                    <span class="n">dispLCD</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">"  Display LCD   "</span><span class="p">);</span> 
                    <span class="n">dispLCD</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s">"Fibonacci:      "</span><span class="p">);</span>
                    <span class="n">n_2</span> <span class="o">=</span> <span class="n">n_1</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                    <span class="n">n</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="n">tela</span> <span class="o">=</span> <span class="mi">11</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>

            <span class="k">case</span> <span class="mi">11</span><span class="p">:</span>
                    <span class="n">n_2</span> <span class="o">=</span> <span class="n">n_1</span><span class="p">;</span>
                    <span class="n">n_1</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
                    <span class="n">n</span> <span class="o">=</span> <span class="n">n_1</span> <span class="o">+</span> <span class="n">n_2</span><span class="p">;</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="p">)</span>
                        <span class="n">tela</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                    <span class="k">else</span>
                        <span class="n">tela</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>

            <span class="k">case</span> <span class="mi">12</span><span class="p">:</span>
                    <span class="n">dispLCD_num</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="mi">5</span> <span class="p">);</span> 
                    <span class="n">tela</span> <span class="o">=</span> <span class="mi">11</span><span class="p">;</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
                    <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
   <span class="p">}</span>
    <span class="k">return</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="inclusão-de-bibliotecas">Inclusão de bibliotecas</h3>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
 * File:   dispLCD8vias.c
 * Author: josewrpereira
 *
 * Created on 15 de Agosto de 2020, 16:06
 * 
 * -------------------------------------------------
 *          MAPA DE ENTRADAS E SAIDAS
 * -------------------------------------------------
 *  Pinos   |nº     |Conexão
 * ---------|-------|-------------------------------
 *  RD2     |21     | LCD_RS
 *  RD3     |22     | LCD_EN
 *  RD4     |27     | LCD_D4
 *  RD5     |28     | LCD_D5
 *  RD6     |29     | LCD_D6
 *  RD7     |30     | LCD_D7
 * -------------------------------------------------
 */</span>

<span class="cp">#include &lt;xc.h&gt;
#include "config.h"
</span>

<span class="c1">//***************** Interface com PORTs/Pinos</span>
<span class="cp">#define LCD_BUS         LCDbits.BUS
#define LCD_EN          LCDbits.EN
#define LCD_RS          LCDbits.RS
#define LCD_ROWS        2
#define LCD_COLS        16
#define LCD_ADDRS       0x008
</span>

<span class="k">typedef</span> <span class="k">union</span> 
<span class="p">{</span>
    <span class="k">struct</span> 
    <span class="p">{</span>
        <span class="kt">unsigned</span> <span class="kt">char</span>     <span class="o">:</span><span class="mi">2</span><span class="p">;</span>
        <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">RS</span>  <span class="o">:</span><span class="mi">1</span><span class="p">;</span>
        <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">EN</span>  <span class="o">:</span><span class="mi">1</span><span class="p">;</span>
        <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">BUS</span> <span class="o">:</span><span class="mi">4</span><span class="p">;</span>
    <span class="p">};</span>
<span class="p">}</span> <span class="n">LCDbits_t</span><span class="p">;</span>

<span class="k">volatile</span> <span class="n">LCDbits_t</span> <span class="n">LCDbits</span> <span class="nf">__at</span><span class="p">(</span><span class="n">LCD_ADDRS</span><span class="p">);</span>





<span class="c1">//***************** Definicao de Comandos ao LCD </span>
<span class="cp">#define LCD_CLEAR_DISPLAY           0x01
</span>
<span class="cp">#define LCD_RETURN_HOME             0x02
</span>
<span class="cp">#define LCD_ENTRY_MODE_SET          0x04
#define LCD_EMS_CURSOR_RIGHT        0x02
#define LCD_EMS_CURSOR_LEFT         0x00
#define LCD_EMS_SHIFT_DISPLAY       0x01
</span>
<span class="cp">#define LCD_DISPLAY_CONTROL         0x08
#define LCD_DC_DISPLAY_ON           0x04
#define LCD_DC_DISPLAY_OFF          0x00
#define LCD_DC_CURSOR_ON            0x02
#define LCD_DC_CURSOR_OFF           0x00
#define LCD_DC_BLINK_ON             0x01
#define LCD_DC_BLINK_OFF            0x00
</span>
<span class="cp">#define LCD_CURSOR_SHIFT            0x10
#define LCD_CS_LEFT                 0x00
#define LCD_CS_RIGHT                0x04
</span>
<span class="cp">#define LCD_DISPLAY_SHIFT           0x10
#define LCD_DS_LEFT                 0x08
#define LCD_DS_RIGHt                0x0C
</span>
<span class="cp">#define LCD_FUNCTION_SET            0x20
#define LCD_FS_DATA_LENGTH_8        0x10
#define LCD_FS_DATA_LENGTH_4        0x00
#define LCD_FS_LINE_NUMBER_1        0x00
#define LCD_FS_LINE_NUMBER_2        0x08
#define LCD_FS_DOTS_FORMAT_5x8      0x00
#define LCD_FS_DOTS_FORMAT_5x11     0x04
</span>
<span class="cp">#define LCD_SET_CGRAM_ADDRS( adrs ) (0x40+(adrs &amp; 0x3F))
</span>
<span class="cp">#define LCD_SET_DDRAM_ADDRS( adrs ) (0x80+(adrs &amp; 0x7F))
#define LCD_ADDR_LINE_0             0x00
#define LCD_ADDR_LINE_1             0x40
</span>


<span class="c1">// Escreve um comando no display (Instruction Register)</span>
<span class="kt">void</span> <span class="nf">dispLCD_instReg</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">i</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">LCD_RS</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">LCD_BUS</span> <span class="o">=</span> <span class="p">(</span><span class="n">i</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="p">);</span>

    <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">i</span> <span class="o">==</span> <span class="n">LCD_CLEAR_DISPLAY</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="n">LCD_RETURN_HOME</span> <span class="p">)</span>
        <span class="n">__delay_ms</span><span class="p">(</span> <span class="mi">2</span> <span class="p">);</span>
    <span class="k">else</span>
        <span class="n">__delay_us</span><span class="p">(</span> <span class="mi">40</span> <span class="p">);</span>
    <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    

    <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">i</span> <span class="o">&amp;</span> <span class="mh">0xF0</span><span class="p">)</span> <span class="o">==</span> <span class="p">(</span><span class="n">LCD_FUNCTION_SET</span> <span class="o">|</span> <span class="n">LCD_FS_DATA_LENGTH_4</span><span class="p">)</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">LCD_RS</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="n">LCD_BUS</span> <span class="o">=</span> <span class="n">i</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="p">;</span>
        <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="n">__delay_us</span><span class="p">(</span> <span class="mi">40</span> <span class="p">);</span>
        <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">LCD_RS</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">LCD_BUS</span> <span class="o">=</span> <span class="n">i</span> <span class="o">&amp;</span> <span class="mh">0x0F</span><span class="p">;</span>
    <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">i</span> <span class="o">==</span> <span class="n">LCD_CLEAR_DISPLAY</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="n">LCD_RETURN_HOME</span> <span class="p">)</span>
        <span class="n">__delay_ms</span><span class="p">(</span> <span class="mi">2</span> <span class="p">);</span>
    <span class="k">else</span>
        <span class="n">__delay_us</span><span class="p">(</span> <span class="mi">40</span> <span class="p">);</span>
    <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>





<span class="c1">// Escreve um dado no display (Data Register))</span>
<span class="kt">void</span> <span class="nf">dispLCD_dataReg</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">d</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">LCD_RS</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">LCD_BUS</span> <span class="o">=</span> <span class="n">d</span> <span class="o">&gt;&gt;</span> <span class="mi">4</span><span class="p">;</span>
    <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">__delay_us</span><span class="p">(</span> <span class="mi">40</span> <span class="p">);</span>
    <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

    <span class="n">LCD_RS</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">LCD_BUS</span> <span class="o">=</span> <span class="n">d</span> <span class="o">&amp;</span> <span class="mh">0x0F</span><span class="p">;</span>
    <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">__delay_us</span><span class="p">(</span> <span class="mi">40</span> <span class="p">);</span>
    <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// Posicionar o cursor na coordenada: linha e coluna </span>
<span class="kt">void</span> <span class="nf">dispLCD_lincol</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">lin</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">col</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">dispLCD_instReg</span><span class="p">(</span> <span class="n">LCD_SET_DDRAM_ADDRS</span><span class="p">(</span> <span class="p">(</span><span class="n">LCD_ADDR_LINE_1</span> <span class="o">*</span> <span class="n">lin</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">col</span> <span class="o">+</span> <span class="n">LCD_ADDR_LINE_0</span><span class="p">)</span> <span class="p">)</span> <span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Inicializa os pinos conectados ao display</span>
<span class="kt">void</span> <span class="nf">dispLCD_init</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD2</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// RS</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD3</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// EN</span>

    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD4</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// D4</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD5</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// D5</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD6</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// D6</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD7</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// D7</span>

    <span class="n">LCD_EN</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">dispLCD_instReg</span><span class="p">(</span> <span class="n">LCD_FUNCTION_SET</span><span class="o">|</span><span class="n">LCD_FS_DATA_LENGTH_4</span><span class="o">|</span><span class="n">LCD_FS_LINE_NUMBER_2</span><span class="p">);</span>
    <span class="n">dispLCD_instReg</span><span class="p">(</span> <span class="n">LCD_DISPLAY_CONTROL</span><span class="o">|</span><span class="n">LCD_DC_DISPLAY_ON</span><span class="o">|</span><span class="n">LCD_DC_CURSOR_OFF</span><span class="o">|</span><span class="n">LCD_DC_BLINK_OFF</span> <span class="p">);</span>
    <span class="n">dispLCD_instReg</span><span class="p">(</span> <span class="n">LCD_CLEAR_DISPLAY</span> <span class="p">);</span>
    <span class="n">dispLCD_instReg</span><span class="p">(</span> <span class="n">LCD_RETURN_HOME</span> <span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Escreve uma string no display</span>
<span class="kt">void</span> <span class="nf">dispLCD</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">lin</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">col</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">str</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">col</span><span class="p">;</span>
    <span class="n">dispLCD_lincol</span><span class="p">(</span> <span class="n">lin</span><span class="p">,</span> <span class="n">col</span> <span class="p">);</span>

    <span class="k">while</span><span class="p">(</span> <span class="o">*</span><span class="n">str</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">dispLCD_dataReg</span><span class="p">(</span> <span class="o">*</span><span class="n">str</span> <span class="p">);</span>
        <span class="o">++</span><span class="n">str</span><span class="p">;</span>
        <span class="o">++</span><span class="n">pos</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Escreve um número inteiro no display</span>
<span class="kt">void</span> <span class="nf">dispLCD_num</span><span class="p">(</span>  <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">lin</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">col</span><span class="p">,</span>
                    <span class="kt">int</span> <span class="n">num</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">tam</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">div</span><span class="p">;</span>
    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">size</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">sinal</span><span class="p">;</span> <span class="c1">// 0:+ 1:-</span>
   
    <span class="n">sinal</span> <span class="o">=</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span> <span class="n">sinal</span> <span class="p">)</span>
        <span class="n">num</span> <span class="o">=</span> <span class="p">(</span><span class="o">~</span><span class="n">num</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>

    <span class="n">dispLCD_lincol</span><span class="p">(</span><span class="n">lin</span><span class="p">,</span> <span class="n">col</span><span class="p">);</span>
   
    <span class="n">div</span><span class="o">=</span><span class="mi">10000</span><span class="p">;</span>
    <span class="n">size</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span> <span class="n">div</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span> <span class="n">num</span><span class="o">/</span><span class="n">div</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
            <span class="o">--</span><span class="n">size</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="n">div</span><span class="o">/=</span><span class="mi">10</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">while</span><span class="p">(</span> <span class="n">tam</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">size</span><span class="o">+</span><span class="n">sinal</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">tam</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">dispLCD_dataReg</span><span class="p">(</span><span class="sc">' '</span><span class="p">);</span>
        <span class="o">--</span><span class="n">tam</span><span class="p">;</span>
    <span class="p">}</span>  

    <span class="k">if</span><span class="p">(</span> <span class="n">sinal</span> <span class="p">)</span>
        <span class="n">dispLCD_dataReg</span><span class="p">(</span><span class="sc">'-'</span><span class="p">);</span>
 
    <span class="k">do</span>
    <span class="p">{</span>
        <span class="n">dispLCD_dataReg</span><span class="p">(</span> <span class="p">(</span><span class="n">num</span> <span class="o">/</span> <span class="n">div</span><span class="p">)</span> <span class="o">+</span> <span class="sc">'0'</span> <span class="p">);</span>
        <span class="n">num</span> <span class="o">=</span> <span class="n">num</span> <span class="o">%</span> <span class="n">div</span><span class="p">;</span>
        <span class="n">div</span><span class="o">/=</span><span class="mi">10</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">while</span><span class="p">(</span> <span class="n">div</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Apaga todos os caracteres no display</span>
<span class="kt">void</span> <span class="nf">dispLCD_clr</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">dispLCD_instReg</span><span class="p">(</span><span class="n">LCD_CLEAR_DISPLAY</span><span class="p">);</span>
<span class="p">}</span>

</code></pre></div></div>

<hr />

<p>Agora é a sua vez!</p>

<p>Crie o seu projeto, copie o código, execute-o, procure os erros, arrume-os, seja resiliente, leia novamente a explicação, busque outras fontes, pergunte, responda, explique, faça alterações conscientes no código, explore, divirta-se.</p>

<p>Ficou com alguma dúvida, entre em contato.</p>

<p>Bom trabalho!</p>

<p><a href="/ddp/docs/tecnology/ucPIC">Voltar</a></p>
:ET