I"*<h1 id="postagens">Postagens</h1>

<p>Assine o <a href="/ddp/feed.xml">RSS</a> para acompanhar as últimas postagens.

<br />
<hr /><hr />


   <div class="post-preview">
   <h2><a href="/ddp/2020/P0130-teclado4x4/">P0130 - Teclado Matricial</a></h2>
   <span class="post-date">2020-08-16</span><br />
   <span class="badge badge-warning">Microcontrolador</span><span class="badge badge-secondary">PIC</span><span class="badge badge-secondary">PIC16F887</span><span class="badge badge-danger">MPLABX-XC8</span><span class="badge badge-success">SimulIDE</span>
   <h1 id="teclado-4x4">Teclado 4x4</h1>

<p>A interface com o operador dos equipamentos microcontrolados geralmente são feitas com a dula diplay LCD e teclado matricial.</p>

<h2 id="objetivo">Objetivo</h2>

<p>Implementar a interface de leitura de um teclado matricial 4x4.</p>


   
      <a href="/ddp/2020/P0130-teclado4x4/">leia mais </a>
   
   </div>
   <hr />

   <div class="post-preview">
   <h2><a href="/ddp/2020/P0122-dispLCD4vias/">P0122 - Display LCD com 4 vias de barramento</a></h2>
   <span class="post-date">2020-08-15</span><br />
   <span class="badge badge-warning">Microcontrolador</span><span class="badge badge-secondary">PIC</span><span class="badge badge-secondary">PIC16F887</span><span class="badge badge-danger">MPLABX-XC8</span><span class="badge badge-success">SimulIDE</span>
   <h1 id="display-lcd">Display LCD</h1>

<p>O LCD permite uma transferência de dados por um barramento de 8 ou 4 vias, economizando assim quatro bits que podem ser utilizados para outros fins.</p>

<h2 id="objetivo">Objetivo</h2>

<p>Adaptar a biblioteca dispLCD8vias para trabalhar com um barramento de 4 vias de dados.</p>


   
      <a href="/ddp/2020/P0122-dispLCD4vias/">leia mais </a>
   
   </div>
   <hr />

   <div class="post-preview">
   <h2><a href="/ddp/2020/P0120-dispLCD8vias/">P0120 - Display LCD com 8 vias de barramento</a></h2>
   <span class="post-date">2020-08-15</span><br />
   <span class="badge badge-warning">Microcontrolador</span><span class="badge badge-secondary">PIC</span><span class="badge badge-secondary">PIC16F887</span><span class="badge badge-danger">MPLABX-XC8</span><span class="badge badge-success">SimulIDE</span>
   <h1 id="display-lcd">Display LCD</h1>

<p>O dispositivo mais comum para a exibição de cadeia de caracteres (<em>strings</em>) e variáveis numéricas é o display de cristal líquido (<em>Liquid Crystal Display</em> - LCD). 
Assim faz-se necessária uma biblioteca mínima para seu uso.</p>
<h2 id="objetivo">Objetivo</h2>

<p>Exibir uma mensagem de texto e uma variável no display LCD.</p>


   
      <a href="/ddp/2020/P0120-dispLCD8vias/">leia mais </a>
   
   </div>
   <hr />

   <div class="post-preview">
   <h2><a href="/ddp/2020/P0112-bordaBotaoPulsador/">P0112 - Borda Botão Pulsador</a></h2>
   <span class="post-date">2020-08-13</span><br />
   <span class="badge badge-warning">Microcontrolador</span><span class="badge badge-secondary">PIC</span><span class="badge badge-secondary">PIC16F887</span><span class="badge badge-danger">MPLABX-XC8</span><span class="badge badge-success">SimulIDE</span>
   <h1 id="detecção-de-borda-em-botão-pulsador">Detecção de borda em botão pulsador</h1>

<p>A leitura simples de um botão implica em alguns comportamentos não desejados como um incremento maior do que a quantidade de vezes que um botão é pressionado. Para solucionar esse problema pode-se utilizar não o estado lógico do botão, mas sim o evendo associado a mudança de estado, evento único dentro de um ciclo de operação.</p>

<h2 id="objetivo">Objetivo</h2>

<p>Detectar as bordas de subida e descida em botão pulsador.</p>


   
      <a href="/ddp/2020/P0112-bordaBotaoPulsador/">leia mais </a>
   
   </div>
   <hr />

   <div class="post-preview">
   <h2><a href="/ddp/2020/P0111-disp7segX2/">P0111 - 2 Displays de 7 segmentos</a></h2>
   <span class="post-date">2020-08-13</span><br />
   <span class="badge badge-warning">Microcontrolador</span><span class="badge badge-secondary">PIC</span><span class="badge badge-secondary">PIC16F887</span><span class="badge badge-danger">MPLABX-XC8</span><span class="badge badge-success">SimulIDE</span>
   <h1 id="display-de-7-segmentos-2-dígitos">Display de 7 segmentos: 2 dígitos</h1>

<p>Raramente um único display de 7 segmentos é suficiente para exibir o valor de alguma grandeza. Assim faz-se necessária a ligação de ao menos outro dígito. Para acionar este outro dígito pode-se utilizar outro <code class="language-plaintext highlighter-rouge">PORT</code> de 8 pinos do uC. A quantidade de pinos utilizados para o display começa a ficar inviável ao aumentar a quantidade de dígitos. Para viabilizar a utilização de vários dígitos, é utilizada uma técnica chamada multiplexação.</p>

<h2 id="objetivo">Objetivo</h2>

<p>Acionar dois displays de 7 segmentos de forma multiplexada para exibir uma contagem de 0 a 99.</p>


   
      <a href="/ddp/2020/P0111-disp7segX2/">leia mais </a>
   
   </div>
   <hr />

   <div class="post-preview">
   <h2><a href="/ddp/2020/P0110-disp7seg/">P0110 - Display de 7 segmentos</a></h2>
   <span class="post-date">2020-08-05</span><br />
   <span class="badge badge-warning">Microcontrolador</span><span class="badge badge-secondary">PIC</span><span class="badge badge-secondary">PIC16F887</span><span class="badge badge-danger">MPLABX-XC8</span><span class="badge badge-success">SimulIDE</span>
   <h1 id="display-de-7-segmentos">Display de 7 segmentos</h1>

<p>O display de 7 segmentos é uma das formas mais comuns de exibir um número, que pode representar o “peso” (massa) em uma balança, horas, minutos e segundos em um relógio ou cronômetro ou um simples contador de objetos em um processo qualquer.</p>

<h2 id="objetivo">Objetivo</h2>

<p>Acionar um display de 7 segmentos para exibir os 16 dígitos hexadecimais:</p>

<p><code class="language-plaintext highlighter-rouge">0,1,2,3,4,5,6,7,8,9,A,B,C,D,E e F</code>;</p>


   
      <a href="/ddp/2020/P0110-disp7seg/">leia mais </a>
   
   </div>
   <hr />

   <div class="post-preview">
   <h2><a href="/ddp/2020/com110-algoritmo/">COM110 - Introdução a algoritmos</a></h2>
   <span class="post-date">2020-08-03</span><br />
   <span class="badge badge-primary">UniVESP</span><span class="badge badge-secondary">Computação</span>
   <h1 id="algorítmos"><a href="https://cursos.univesp.br/courses/3163/pages/semana-1?module_item_id=264918">Algorítmos</a></h1>

<p>Todo <strong>programa</strong> visa <strong>solucionar um problema</strong> posto, partindo da definição do problema (O que?) e seguindo para o desenvolvimento do programa (Como?), que pode ser dividido em três partes:</p>
<ul>
  <li>Projetar a solucação (algoritmo);</li>
  <li>Codificar a solução (Programar em linguagem de programação);</li>
  <li>Testar o programa.</li>
</ul>


   
      <a href="/ddp/2020/com110-algoritmo/">leia mais </a>
   
   </div>
   <hr />

   <div class="post-preview">
   <h2><a href="/ddp/2020/P0102-botaoLED/">P0102 - Botão LED</a></h2>
   <span class="post-date">2020-07-29</span><br />
   <span class="badge badge-warning">Microcontrolador</span><span class="badge badge-secondary">PIC</span><span class="badge badge-secondary">PIC16F887</span><span class="badge badge-danger">MPLABX-XC8</span><span class="badge badge-success">SimulIDE</span>
   <h1 id="botão-led">Botão LED</h1>

<p>Agora que sabemos como acionar uma saída digital, vamos fazer a leitura de uma entrada também digital, utilizando um botão pulsador (<em>push button</em>) para ligar um LED.</p>

<p>Toda construção de programa deve ser feita de forma incremental, iniciando com uma estrutura básica e agregando parte a parte do código até atingir o objetivo.</p>

<h2 id="objetivo">Objetivo</h2>

<p>Acionar um LED copiando o estado lógico de um botão.</p>


   
      <a href="/ddp/2020/P0102-botaoLED/">leia mais </a>
   
   </div>
   <hr />

   <div class="post-preview">
   <h2><a href="/ddp/2020/P0101-piscaLED/">P0101 - Pisca LED</a></h2>
   <span class="post-date">2020-07-25</span><br />
   <span class="badge badge-warning">Microcontrolador</span><span class="badge badge-secondary">PIC</span><span class="badge badge-secondary">PIC16F887</span><span class="badge badge-danger">MPLABX-XC8</span><span class="badge badge-success">SimulIDE</span>
   <h1 id="pisca-led">Pisca LED</h1>

<p>Uma prática costumeira em programação, sempre que se testa a compilação em um projeto novo, é exibir na tela a mensagem <em><code class="language-plaintext highlighter-rouge">"Hello world"</code></em> ou em português <code class="language-plaintext highlighter-rouge">"Ola mundo"</code>. Tal prática ocorre pelo fato de que fazer a exibição de uma mensagem na saída padrão, que geralmente é o monitor, ser o programa mínimo funcional que se pode fazer em um programa de computador.</p>

<p>Em um sistema microcontrolado, o programa equivalente ao <code class="language-plaintext highlighter-rouge">"Ola mundo"</code> é o acionamento intermitente de uma dispositivo de sinalização em uma saída digital, ou seja, fazer um LED conectado a uma pino piscar: <code class="language-plaintext highlighter-rouge">Pisca LED</code>.</p>

<p>Assim, o <code class="language-plaintext highlighter-rouge">Pisca LED</code> ou <em><code class="language-plaintext highlighter-rouge">Blink LED</code></em> é o programa mínimo e ponto de partida no estudo dos sistemas microcontrolados, e de extrema importância por testar a compilação do programa (<em>firmware</em>), sua gravação no dispositivo alvo e ao menos uma parte do circuito em sua execução, validando o processo de compilação, gravação e execução.</p>

<h2 id="objetivo">Objetivo</h2>

<p>Acionar um LED de forma intermitente com frequência de 1Hz.</p>


   
      <a href="/ddp/2020/P0101-piscaLED/">leia mais </a>
   
   </div>
   <hr />

   <div class="post-preview">
   <h2><a href="/ddp/2020/uri1010/">URI1010</a></h2>
   <span class="post-date">2020-07-23</span><br />
   <span class="badge badge-primary">Python</span>
   <h1 id="cálculo-simples"><a href="https://www.urionlinejudge.com.br/judge/pt/problems/view/1010">Cálculo Simples</a></h1>

<p>O problema solicita que o programa leia três números referentes a primeira peça e outros três números na linha seguinte referentes a segunda peça. Os números de cada uma das peças são: seu código (inteiro), sua quantidade (inteiro) e seu valor unitário (float).</p>

<p>Assuntos abordados:</p>
<ul>
  <li>Entrada de múltiplas variáveis por linha.</li>
</ul>


   
      <a href="/ddp/2020/uri1010/">leia mais </a>
   
   </div>
   <hr />


Quer ver mais? Acesse <a href="/ddp/archive/">artigos</a>.
</p>
:ET