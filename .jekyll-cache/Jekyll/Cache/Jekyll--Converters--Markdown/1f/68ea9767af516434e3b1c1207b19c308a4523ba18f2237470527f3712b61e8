I"D<h1 id="sem√°foro">Sem√°foro</h1>

<h2 id="objetivo">Objetivo</h2>

<p>Simular um sem√°foro de ve√≠culos e de pedestre, incluindo o bot√£o para bloqueio da via e libera√ß√£o da atravessia aos pedestres utilizando uma m√°quina de estados.</p>

<h2 id="conte√∫do">Conte√∫do</h2>

<ul>
  <li>Estrutura condicional <code class="language-plaintext highlighter-rouge">switch case</code>;</li>
  <li>M√°quina de estados.</li>
</ul>

<!--more-->

<h2 id="circuito-hardware">Circuito (<a href="https://github.com/JoseWRPereira/ucPICsimulIDE/tree/master/sim_semaforo"><em>Hardware</em></a>)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Figura 1: Sem√°foro de Ve√≠culos para uma via simples com bot√£o de pedestre</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://github.com/JoseWRPereira/ddp/blob/master//_posts/tUcPIC/c1-semaforo_veiculos_pedestres/semaforo_veiculos_pedestres.gif?raw=true" alt="circuito" /></td>
    </tr>
  </tbody>
</table>

<h2 id="programa-firmware">Programa (<a href="https://github.com/JoseWRPereira/ucPICsimulIDE/tree/master/c1_semaforo_veiculos_pedestres_me.X"><em>Firmware</em></a>)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Figura 2: √Årvore de diret√≥rio do projeto</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://github.com/JoseWRPereira/ddp/blob/master//_posts/tUcPIC/c1-semaforo_veiculos_pedestres/projectTree2.png?raw=true" alt="circuito" /></td>
    </tr>
  </tbody>
</table>

<h2 id="biblioteca-local-delay">Biblioteca local delay</h2>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;xc.h&gt;
#include "delay.h"
</span>
<span class="kt">void</span> <span class="nf">delay</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">t</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">while</span><span class="p">(</span> <span class="n">t</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">__delay_ms</span><span class="p">(</span> <span class="mi">1</span> <span class="p">);</span>
        <span class="o">--</span><span class="n">t</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#ifndef DELAY_H
#define DELAY_H
</span>
<span class="cp">#define _XTAL_FREQ  4000000
</span>
<span class="kt">void</span> <span class="nf">delay</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">t</span> <span class="p">);</span>

<span class="cp">#endif
</span></code></pre></div></div>

<h2 id="biblioteca-local-sem√°foro">Biblioteca local sem√°foro</h2>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;xc.h&gt;
#include "semaforo.h"
</span>
<span class="kt">void</span> <span class="nf">semaforo_init</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
        <span class="c1">// Configura√ß√£o dos pinos</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD7</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// Sa√≠da: Vermelho ve√≠culos</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD6</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// Sa√≠da: Amarelo ve√≠culos</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD5</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// Sa√≠da: Verde ve√≠culos</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD3</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// Sa√≠da: Vermelho pedestre</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD2</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>   <span class="c1">// Sa√≠da: Verde pedestre</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD0</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>   <span class="c1">// Entrada: Bot√£o pedestre</span>
    
        <span class="c1">// Inicializa√ß√£o do estado dos LEDs</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD7</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD6</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD5</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD3</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD2</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">char</span> <span class="nf">botao_pedestre</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span><span class="p">(</span> <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD0</span> <span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">semaforo</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">cor</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD2</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD3</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD5</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD6</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD7</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">switch</span><span class="p">(</span> <span class="n">cor</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="k">case</span> <span class="n">VERMELHO</span><span class="p">:</span>
                    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD7</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD2</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="n">AMARELO</span><span class="p">:</span>
                    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD6</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD3</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="n">VERDE</span><span class="p">:</span>
                    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD5</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD3</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#ifndef SEMAFORO_H
#define SEMAFORO_H
</span>
<span class="cp">#define VERMELHO    'R'
#define AMARELO     'Y'
#define VERDE       'G'
</span>
<span class="kt">void</span> <span class="nf">semaforo_init</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">char</span> <span class="nf">botao_pedestre</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">void</span> <span class="nf">semaforo</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">cor</span> <span class="p">);</span>

<span class="cp">#endif
</span></code></pre></div></div>

<h3 id="programa-principal">Programa principal</h3>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
 * File:   main.c
 * Author: josewrpereira
 *
 * Created on 20 April 2021, 20:42
 * 
 * IDE:                 MPLAB X IDE v5.45
 * Compiler:            XC8 v2.31
 * Operating System:    Debian GNU/Linux bullseye/sid
 * Kernel:              Linux 5.10.0-5-amd64
 * Architecture:        x86-64
 * 
 * Objetivo: 
 *      Simular um sem√°foro de ve√≠culos e de pedestre, 
 *      incluindo o bot√£o para bloqueio da via e 
 *      libera√ß√£o da atravessia aos pedestres 
 *      utilizando M√°quina de Estados.
 * 
 * 
 * Pinos    |n¬∫     |Conex√£o
 *  VDD     |11,32  | Alimenta√ß√£o (Vcc/+5V)
 *  VSS     |12,31  | Alimenta√ß√£o (GND/0V)
 *  RD7     |30     | LED Vermelho Ve√≠culos (source)
 *  RD6     |29     | LED Amarelo Ve√≠culos (source)
 *  RD5     |28     | LED Verde Ve√≠culos (source)
 *  RD3     |22     | LED Vermelho Pedestres(source)
 *  RD2     |21     | LED Verde Pedestres(source)
 *  RD0     |19     | Bot√£o Pulsador Pedestres (pullDown)
 * 
 */</span>

<span class="cp">#include "config.h"
#include &lt;xc.h&gt;
#include "semaforo.h"
#include "delay.h"
</span>
<span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="n">estado</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">tempo</span><span class="p">;</span>
    <span class="n">semaforo_init</span><span class="p">();</span>

    <span class="k">while</span><span class="p">(</span> <span class="mi">1</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="k">switch</span><span class="p">(</span> <span class="n">estado</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="k">case</span> <span class="mi">0</span><span class="p">:</span>
                    <span class="n">semaforo</span><span class="p">(</span> <span class="n">VERDE</span> <span class="p">);</span>
                    <span class="n">estado</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">botao_pedestre</span><span class="p">()</span> <span class="p">)</span>
                        <span class="n">estado</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
                    <span class="n">tempo</span> <span class="o">=</span> <span class="mi">2000</span><span class="p">;</span>
                    <span class="n">estado</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">3</span><span class="p">:</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
                    <span class="o">--</span><span class="n">tempo</span><span class="p">;</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">tempo</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
                        <span class="n">estado</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">4</span><span class="p">:</span>
                    <span class="n">semaforo</span><span class="p">(</span> <span class="n">AMARELO</span> <span class="p">);</span>
                    <span class="n">estado</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">5</span><span class="p">:</span>
                    <span class="n">tempo</span> <span class="o">=</span> <span class="mi">3000</span><span class="p">;</span>
                    <span class="n">estado</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">6</span><span class="p">:</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
                    <span class="o">--</span><span class="n">tempo</span><span class="p">;</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">tempo</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
                        <span class="n">estado</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">7</span><span class="p">:</span>
                    <span class="n">semaforo</span><span class="p">(</span> <span class="n">VERMELHO</span> <span class="p">);</span>
                    <span class="n">estado</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">8</span><span class="p">:</span>
                    <span class="n">tempo</span> <span class="o">=</span> <span class="mi">5000</span><span class="p">;</span>
                    <span class="n">estado</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">9</span><span class="p">:</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
                    <span class="o">--</span><span class="n">tempo</span><span class="p">;</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">tempo</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
                        <span class="n">estado</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<p>Agora √© a sua vez!</p>

<p>Crie o seu projeto, copie o c√≥digo, execute-o, procure os erros, arrume-os, seja resiliente, leia novamente a explica√ß√£o, busque outras fontes, pergunte, responda, fa√ßa altera√ß√µes conscientes no c√≥digo, explore, divirta-se.</p>

<p>Ficou alguma d√∫vida, entre em contato.</p>

<p>Bom trabalho!</p>

<hr />

<blockquote>
  <blockquote>
    <blockquote>
      <p><a href="/ddp/2021/c1-semaforo_veiculos_pedestres">¬´¬†C1 - Sem√°foro de Ve√≠culos e de Pedestres </a> ¬´¬†C1 - Sem√°foro com M√°quina de Estados¬†¬ª <a href="/ddp/2021/c1-partida_estrela_triangulo">C1 - Partida Estrela/Tri√¢ngulo¬†¬ª</a></p>
    </blockquote>
  </blockquote>
</blockquote>

<hr />

<p><a href="/ddp/docs/tecnology/ucPIC">Voltar</a></p>
:ET