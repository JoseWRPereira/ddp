I"˝:<h1 id="partida-de-motor-trif√°sico">Partida de Motor Trif√°sico</h1>

<h2 id="objetivo">Objetivo</h2>

<p>Simular uma partida estrela/tri√¢ngulo de motor trif√°sico.</p>

<h2 id="conte√∫do">Conte√∫do</h2>

<ul>
  <li>Estrutura condicional <code class="language-plaintext highlighter-rouge">switch case</code>;</li>
  <li>M√°quina de estados.</li>
</ul>

<!--more-->

<h2 id="circuito-hardware">Circuito (<a href="https://github.com/JoseWRPereira/ucPICsimulIDE/tree/master/sim_partida_estrela_triangulo"><em>Hardware</em></a>)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Figura 1: Partida Estrela-Tri√¢ngulo para motor trif√°sico</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://github.com/JoseWRPereira/ddp/blob/master//_posts/tUcPIC/c1-partida_estrela_triangulo/partida_estrela_triangulo.gif?raw=true" alt="circuito" /></td>
    </tr>
  </tbody>
</table>

<h2 id="programa-firmware">Programa (<a href="https://github.com/JoseWRPereira/ucPICsimulIDE/tree/master/c1_partida_estrela_triangulo.X"><em>Firmware</em></a>)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Figura 2: √Årvore de diret√≥rio do projeto</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://github.com/JoseWRPereira/ddp/blob/master//_posts/tUcPIC/c1-partida_estrela_triangulo/projectTree.png?raw=true" alt="circuito" /></td>
    </tr>
  </tbody>
</table>

<h2 id="biblioteca-local-delay">Biblioteca local delay</h2>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;xc.h&gt;
#define _XTAL_FREQ  4000000
</span>
<span class="kt">void</span> <span class="nf">delay</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">t</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">while</span><span class="p">(</span> <span class="n">t</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">__delay_ms</span><span class="p">(</span> <span class="mi">1</span> <span class="p">);</span>
        <span class="o">--</span><span class="n">t</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#ifndef DELAY_H
#define DELAY_H
</span>
<span class="kt">void</span> <span class="nf">delay</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">t</span> <span class="p">);</span>

<span class="cp">#endif
</span></code></pre></div></div>

<h2 id="biblioteca-local-partida-estrela-tri√¢ngulo">Biblioteca local partida Estrela-Tri√¢ngulo</h2>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;xc.h&gt;
</span>
<span class="kt">void</span> <span class="nf">pet_init</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD7</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD6</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD5</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD1</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">TRISDbits</span><span class="p">.</span><span class="n">TRISD0</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD7</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD6</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD5</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">pet_k1_set</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD5</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">pet_k1_reset</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD5</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">pet_k2_set</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD6</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">pet_k2_reset</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD6</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">pet_k3_set</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD7</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">pet_k3_reset</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD7</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>


<span class="kt">char</span> <span class="nf">pet_s1</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span><span class="p">(</span> <span class="o">!</span><span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD1</span> <span class="p">);</span>
<span class="p">}</span>

<span class="kt">char</span> <span class="nf">pet_s0</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span><span class="p">(</span> <span class="o">!</span><span class="n">PORTDbits</span><span class="p">.</span><span class="n">RD0</span> <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#ifndef PARTIDA_ESTRELA_TRIANGULO_H
#define PARTIDA_ESTRELA_TRIANGULO_H
</span>
<span class="kt">void</span> <span class="nf">pet_init</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">void</span> <span class="nf">pet_k1_set</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">void</span> <span class="nf">pet_k1_reset</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">void</span> <span class="nf">pet_k2_set</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">void</span> <span class="nf">pet_k2_reset</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">void</span> <span class="nf">pet_k3_set</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">void</span> <span class="nf">pet_k3_reset</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">char</span> <span class="nf">pet_s1</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">char</span> <span class="nf">pet_s0</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>

<span class="cp">#endif
</span></code></pre></div></div>

<h3 id="programa-principal">Programa principal</h3>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
 * File:   main.c
 * Author: josewrpereira
 *
 * Created on 20 April 2021, 20:28
 * 
 * IDE:                 MPLAB X IDE v5.45
 * Compiler:            XC8 v2.31
 * Operating System:    Debian GNU/Linux bullseye/sid
 * Kernel:              Linux 5.10.0-5-amd64
 * Architecture:        x86-64
 * 
 * Objetivo: 
 *      Simular uma partida estrela/tri√¢ngulo de motor trif√°sico.
 * 
 * n¬∫ Pinos| PORT |Conex√£o
 *  11,32  | VDD  | Alimenta√ß√£o (Vcc/+5V)
 *  12,31  | VSS  | Alimenta√ß√£o (GND/0V)
 * 
 *  30     | RD7  | Contator K1: Comum (source)
 *  29     | RD6  | Contator K2: Tri√¢ngulo (source)
 *  28     | RD5  | Contator K3: Estrela (source)
 * 
 *  19     | RD0  | Bot√£o Pulsador Desligar (pullUp)
 *  20     | RD1  | Bot√£o Pulsador Ligar (pullUp)
 * 
 */</span>

<span class="cp">#include "config.h"
#include &lt;xc.h&gt;
#include "delay.h"
#include "partida_estrela_triangulo.h"
</span>
<span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="n">estado</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">tempo</span><span class="p">;</span>
    
    <span class="n">pet_init</span><span class="p">();</span>
    
    <span class="k">while</span><span class="p">(</span> <span class="mi">1</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="k">switch</span><span class="p">(</span> <span class="n">estado</span> <span class="p">)</span>
        <span class="p">{</span>
            <span class="k">case</span> <span class="mi">0</span><span class="p">:</span>
                    <span class="n">pet_k3_reset</span><span class="p">();</span>
                    <span class="n">pet_k2_reset</span><span class="p">();</span>
                    <span class="n">pet_k1_reset</span><span class="p">();</span>
                    <span class="n">estado</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">pet_s1</span><span class="p">()</span> <span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">estado</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
                    <span class="p">}</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
                    <span class="n">pet_k1_set</span><span class="p">();</span>
                    <span class="n">pet_k3_set</span><span class="p">();</span>
                    <span class="n">tempo</span> <span class="o">=</span> <span class="mi">5000</span><span class="p">;</span>
                    <span class="n">estado</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">3</span><span class="p">:</span>
                    <span class="n">delay</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
                    <span class="o">--</span><span class="n">tempo</span><span class="p">;</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">tempo</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
                        <span class="n">estado</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">pet_s0</span><span class="p">()</span> <span class="p">)</span>
                        <span class="n">estado</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">4</span><span class="p">:</span>
                    <span class="n">pet_k3_reset</span><span class="p">();</span>
                    <span class="n">pet_k2_set</span><span class="p">();</span>
                    <span class="n">estado</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">5</span><span class="p">:</span>
                    <span class="k">if</span><span class="p">(</span> <span class="n">pet_s0</span><span class="p">()</span> <span class="p">)</span>
                        <span class="n">estado</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Agora √© a sua vez!</p>

<p>Crie o seu projeto, copie o c√≥digo, execute-o, procure os erros, arrume-os, seja resiliente, leia novamente a explica√ß√£o, busque outras fontes, pergunte, responda, fa√ßa altera√ß√µes conscientes no c√≥digo, explore, divirta-se.</p>

<p>Ficou alguma d√∫vida, entre em contato.</p>

<p>Bom trabalho!</p>

<hr />

<blockquote>
  <blockquote>
    <blockquote>
      <p><a href="/ddp/2021/c1-semaforo_veiculos_pedestres_me">¬´¬†C1 - Sem√°foro com M√°quina de Estados </a> ¬´¬†C1 - Partida Estrela/Tri√¢ngulo¬†¬ª <a href="/ddp/2021/c1-disp7seg"> C1 - Display de 7 segmentos¬†¬ª</a></p>
    </blockquote>
  </blockquote>
</blockquote>

<hr />

<p><a href="/ddp/docs/tecnology/ucPIC">Voltar</a></p>
:ET