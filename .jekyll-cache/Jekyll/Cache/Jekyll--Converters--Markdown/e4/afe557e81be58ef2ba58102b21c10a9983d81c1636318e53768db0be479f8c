I"ﬁ"<h1 id="display-de-7-segmentos">Display de 7 segmentos</h1>

<p>O display de 7 segmentos √© uma das formas mais comuns de exibir um n√∫mero, que pode representar o ‚Äúpeso‚Äù (massa) em uma balan√ßa, horas, minutos e segundos em um rel√≥gio ou cron√¥metro ou um simples contador de objetos em um processo qualquer.</p>

<h2 id="objetivo">Objetivo</h2>

<p>Acionar um display de 7 segmentos para exibir os 16 d√≠gitos hexadecimais: <code class="language-plaintext highlighter-rouge">0,1,2,3,4,5,6,7,8,9,A,B,C,D,E e F</code>;</p>

<!--more-->

<h2 id="circuito-hardware">Circuito (<em>Hardware</em>)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Figura 1: Display de 7 segmentos catodo comum</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://github.com/JoseWRPereira/ddp/blob/master//_posts/tUcPIC/imgP0110/P0110-disp7seg0-F.gif?raw=true" alt="circuito" /></td>
    </tr>
  </tbody>
</table>

<h2 id="programa-firmware">Programa (<em>Firmware</em>)</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Figura 2: √Årvore de diret√≥rio do projeto</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://github.com/JoseWRPereira/ddp/blob/master//_posts/tUcPIC/imgP0110/projectTree.jpg?raw=true" alt="circuito" /></td>
    </tr>
  </tbody>
</table>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
 * File:   main.c
 * Author: josewrpereira
 *
 * Created on 5 de Agosto de 2020, 20:21:59
 * 
 * -------------------------------------------------
 *          MAPA DE ENTRADAS E SAIDAS
 * -------------------------------------------------
 *  Pinos   |n¬∫     |Conex√£o
 * ---------|-------|-------------------------------
 *  RD0     |19     | Segmento a
 *  RD1     |20     | Segmento b
 *  RD2     |21     | Segmento c
 *  RD3     |22     | Segmento d
 *  RD4     |27     | Segmento e
 *  RD5     |28     | Segmento f
 *  RD6     |29     | Segmento g
 *  RD7     |30     | Segmento p
 * -------------------------------------------------
 */</span>

<span class="cp">#include &lt;xc.h&gt;
#include "config.h"
#include "delay.h"
#include "disp7seg.h"
</span>
<span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> 
<span class="p">{</span>
    <span class="kt">char</span> <span class="n">cont</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="n">disp7seg_init</span><span class="p">();</span>
    
    <span class="k">while</span><span class="p">(</span> <span class="mi">1</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">disp7seg</span><span class="p">(</span> <span class="n">cont</span> <span class="p">);</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
        <span class="n">cont</span> <span class="o">=</span> <span class="o">++</span><span class="n">cont</span> <span class="o">%</span> <span class="mi">16</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;xc.h&gt;
#include "config.h"
#include "delay.h"
</span>
<span class="kt">char</span> <span class="n">digitos7seg</span><span class="p">[</span><span class="mi">16</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>    <span class="mh">0x3F</span><span class="p">,</span> <span class="mh">0x06</span><span class="p">,</span> <span class="mh">0x5B</span><span class="p">,</span> <span class="mh">0x4F</span><span class="p">,</span> 
                            <span class="mh">0x66</span><span class="p">,</span> <span class="mh">0x6D</span><span class="p">,</span> <span class="mh">0x7D</span><span class="p">,</span> <span class="mh">0x07</span><span class="p">,</span> 
                            <span class="mh">0x7F</span><span class="p">,</span> <span class="mh">0x6F</span><span class="p">,</span> <span class="mh">0x77</span><span class="p">,</span> <span class="mh">0x7C</span><span class="p">,</span> 
                            <span class="mh">0x39</span><span class="p">,</span> <span class="mh">0x5E</span><span class="p">,</span> <span class="mh">0x79</span><span class="p">,</span> <span class="mh">0x71</span>  <span class="p">};</span>

<span class="kt">void</span> <span class="nf">disp7seg_init</span><span class="p">(</span> <span class="kt">void</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">TRISD</span> <span class="o">=</span> <span class="mh">0x00</span><span class="p">;</span>

    <span class="n">PORTD</span> <span class="o">=</span> <span class="mh">0xFF</span><span class="p">;</span>    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
    <span class="n">PORTD</span> <span class="o">=</span> <span class="mh">0x00</span><span class="p">;</span>    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
    <span class="n">PORTD</span> <span class="o">=</span> <span class="mh">0xFF</span><span class="p">;</span>    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
    <span class="n">PORTD</span> <span class="o">=</span> <span class="mh">0x00</span><span class="p">;</span>    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">disp7seg</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">num</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">PORTD</span> <span class="o">=</span> <span class="p">(</span><span class="n">num</span> <span class="o">&lt;</span> <span class="mi">16</span><span class="p">)</span> <span class="o">?</span> <span class="n">digitos7seg</span><span class="p">[</span><span class="n">num</span><span class="p">]</span> <span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#ifndef DISP7SEG_H
#define	DISP7SEG_H
</span>
<span class="kt">void</span> <span class="nf">disp7seg_init</span><span class="p">(</span> <span class="kt">void</span> <span class="p">);</span>
<span class="kt">void</span> <span class="nf">disp7seg</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">num</span> <span class="p">);</span>

<span class="cp">#endif
</span></code></pre></div></div>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;xc.h&gt;
#include "config.h"
</span>
<span class="kt">void</span> <span class="nf">delay</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">t</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">while</span><span class="p">(</span> <span class="n">t</span> <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">__delay_ms</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
        <span class="o">--</span><span class="n">t</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#ifndef DELAY_H
#define DELAY_H
</span>
<span class="kt">void</span> <span class="nf">delay</span><span class="p">(</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">t</span> <span class="p">);</span>

<span class="cp">#endif
</span></code></pre></div></div>

<h2 id="estrutura-do-programa">Estrutura do programa</h2>

<p>O programa presente no arquivo fonte <code class="language-plaintext highlighter-rouge">main.c</code> possui o seguinte arranjo:</p>
<ul>
  <li></li>
  <li></li>
  <li>Programa principal.</li>
</ul>

<hr />

<p>Agora √© a sua vez!</p>

<p>Crie o seu projeto, copie o c√≥digo, execute-o, procure os erros, arrume-os, seja resiliente, leia novamente a explica√ß√£o, busque outras fontes, pergunte, responda, explique, fa√ßa altera√ß√µes conscientes no c√≥digo, explore, divirta-se.</p>

<p>Ficou com alguma d√∫vida, entre em contato.</p>

<p>Bom trabalho!</p>

<p><a href="/ddp/docs/tecnology/ucPIC">Voltar</a></p>
:ET